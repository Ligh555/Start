// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.versions = [
            'animalSniffer': '1.18',
            'assertj': '3.15.0',
            'bouncycastle': '1.65',
            'brotli': '0.1.2',
            'checkstyle': '8.28',
            'conscrypt': '2.5.2',
            'corretto': '1.3.1',
            'findbugs': '3.0.2',
            'guava': '31.1-jre',
            'java': '1.8',
            'jnrUnixsocket': '0.28',
            'jsoup': '1.13.1',
            'junit': '4.13',
            'kotlin': '1.6.20',
            'moshi': '1.13.0',
            'okio': '3.0.0',
            'ktlint': '0.38.0',
            'picocli': '4.2.0',
            'openjsse': '1.1.0'
    ]

    ext.deps = [
            'picocli': "info.picocli:picocli:${versions.picocli}",
            'android': "org.robolectric:android-all:12.1-robolectric-8229987",
            'animalSniffer': "org.codehaus.mojo:animal-sniffer-annotations:${versions.animalSniffer}",
            'assertj': "org.assertj:assertj-core:${versions.assertj}",
            'bouncycastle': "org.bouncycastle:bcprov-jdk15on:${versions.bouncycastle}",
            'bouncycastlepkix': "org.bouncycastle:bcpkix-jdk15on:${versions.bouncycastle}",
            'bouncycastletls': "org.bouncycastle:bctls-jdk15on:${versions.bouncycastle}",
            'brotli': "org.brotli:dec:${versions.brotli}",
            'conscrypt': "org.conscrypt:conscrypt-openjdk-uber:${versions.conscrypt}",
            'corretto': "software.amazon.cryptools:AmazonCorrettoCryptoProvider:${versions.corretto}:linux-x86_64",
            'guava': "com.google.guava:guava:${versions.guava}",
            'jnrUnixsocket': "com.github.jnr:jnr-unixsocket:${versions.jnrUnixsocket}",
            'jsoup': "org.jsoup:jsoup:${versions.jsoup}",
            'jsr305': "com.google.code.findbugs:jsr305:${versions.findbugs}",
            'junit': "junit:junit:${versions.junit}",
            'kotlinStdlib': "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin}",
            'moshi': "com.squareup.moshi:moshi:${versions.moshi}",
            'moshiKotlin': "com.squareup.moshi:moshi-kotlin-codegen:${versions.moshi}",
            'okio': "com.squareup.okio:okio:${versions.okio}",
            'openjsse': "org.openjsse:openjsse:${versions.openjsse}"
    ]
}


plugins {
    id 'com.android.application' version '8.1.1' apply false
    id 'com.android.library' version '8.1.1' apply false
    id 'org.jetbrains.kotlin.android' version '1.9.0' apply false
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.9.0'
    id("com.google.dagger.hilt.android") version "2.44" apply false
}

ext {
    kotlin_version = '1.9.0'
    activityVersion = '1.1.0'
    appCompatVersion = '1.2.0'
    constraintLayoutVersion = '2.0.2'
    coreTestingVersion = '2.1.0'
    coroutines = '1.3.9'
    lifecycleVersion = '2.2.0'
    materialVersion = '1.2.1'
    roomVersion = '2.2.5'
    // testing
    junitVersion = '4.13.1'
    espressoVersion = '3.1.0'
    androidxJunitVersion = '1.1.2'
    fragment_version = "1.5.6"
}

task clean(type: Delete) {
    delete rootProject.buildDir
}